pre-exploitation: {
	references: {
		https://github.com/FULLSHADE/WindowsExploitationResources/
		https://github.com/hacksysteam/Exploitation
		https://github.com/gavz/awesome-windows-exploitation
		https://archive.org/details/github.com-yeyintminthuhtut-Awesome-Advanced-Windows-Exploitation-References_-_2019-04-02_09-45-28
	}
	tutorial and sample use plugins for windbg: {
		https://philkeeble.com/exploitation/windows/Vulnserver-Walkthrough-Part-1/
	}
}
post-exploitation: {
	techniques: {
		lpe: {
			https://fareedfauzi.gitbook.io/oscp-notes/windows-post-exploitation/windows-privesc-technique
			https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-windows
		}
		selection: {
			https://vk9-sec.com/category/red-team/post-exploitation/windows-post-exploitation/
			https://dostoevskylabs.gitbooks.io/dostoevskylabs-pentest-notes/content/chapter-4.html
		}
	}
}

windows internals: {
	microsoft vendor links and paid books: {
		https://docs.microsoft.com/en-us/sysinternals/resources/
	}
	tools: {
	https://github.com/hfiref0x/WinObjEx64
		sysinternals (official microsoft system internals tools for introspection windows system): {
			https://docs.microsoft.com/en-us/sysinternals/downloads/
			src: {
				https://github.com/zodiacon/WindowsInternals
			}
		}
		binary analysis or reverse engineering tools: {
			https://github.com/imugee/xdv
			
		}
	}
	
	materials: {
		windowsInternalsReading: {
			GeneralMainArchitecture: {
			https://gist.github.com/vxcute/6f850da82578b3fe6a10b65496bb6ec8
			https://www.pdfdrive.com/windows-for-reverse-engineers-os-internals-d34487983.html
			https://www.pdfdrive.com/windows-internals-part-1-system-architecture-processes-threads-memory-management-and-more-e195059005.html
			http://alter.org.ua/en/docs/
			https://bsodtutorials.blogspot.com/2014/01/official-twitter-account-bsodtutorials.html
			https://bsodtutorials.blogspot.com/
			http://www.nynaeve.net/?page_id=67
			http://www.nynaeve.net/?cat=10
			http://www.nynaeve.net/?cat=5
			https://www.cs.fsu.edu/~zwang/files/cop4610/Fall2016/windows.pdf
			}
			blogs: {
				https://bsodtutorials.blogspot.com/
				https://ntcore.com/?page_id=330
			}
			courses and CTF: {
				https://www.corelan-training.com/index.php/training/advanced/
				https://www.fuzzysecurity.com/tutorials/expDev/1.html ('Windows Exploit Development Tutorial Series')
				https://www.fuzzysecurity.com/tutorials/mr_me/1.html ('Windows Heap Exploitation')
				
			}
			debugging: {
				https://www.pdfdrive.com/advanced-windows-debugging-d51042218.html
				http://www.nynaeve.net/?cat=2https://riptutorial.com/windbg/example/19170/important-commands
				https://etutorials.org/Programming/programming+microsoft+visual+c+sharp+2005/Part+IV+Debugging/
				https://etutorials.org/Programming/programming+microsoft+visual+c+sharp+2005/Part+IV+Debugging/Chapter+13+Advanced+Debugging/WinDbg/
				windbg: {
					http://windbg.info/doc/2-windbg-a-z.html
					http://windbg.org/
					https://github.com/abarbatei/windbg-info
					https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/getting-started-with-windbg
					https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/getting-started-with-windbg--kernel-mode-
					https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-reference
					https://riptutorial.com/windbg/example/19170/important-commands
					https://awesomeopensource.com/project/bulentrahimkazanci/Windbg-Cheat-Sheet
					https://www.expertdebugging.com/windbgvideos
					https://github.com/hugsy/defcon_27_windbg_workshop/blob/master/windbg_cheatsheet.md
					https://github.com/bulentkazanci/Cheat-Sheet-Windbg
					plugins and extensions: {
						https://github.com/Byzero512/peda-windows/tree/master/windbg/bywin
						https://github.com/microsoft/DbgShell
						https://github.com/swwwolf/wdbgark
						https://github.com/Dynatrace/superdump
						https://github.com/vallejocc/Reverse-Engineering-Arsenal/tree/master/WinDbg
						https://github.com/vagnerpilar/windbgtree
						https://github.com/0cch/0cchext
						https://github.com/southpolenator/SharpDebug
						https://github.com/imugee/pegasus
						https://github.com/pstolarz/dumpext
						https://github.com/progmboy/win32kext
						https://github.com/pstolarz/scriptext
						https://github.com/wangray/WinDBG-for-GDB-users
						https://github.com/imugee/xdv
						https://github.com/JKornev/cfgdump
						https://github.com/corelan/windbglib
						https://forum.tuts4you.com/files/category/58-extensions/
						https://github.com/0vercl0k/windbg-scripts
						https://github.com/yardenshafir/WinDbg_Scripts
						https://github.com/Microsoft/WinDbg-Samples
						https://github.com/OSRDrivers/windbg-exts
						https://github.com/DownWithUp/bswap
						https://github.com/hugsy/windbg_js_scripts
						pykd: {
							https://rayanfam.com/topics/pykd-tutorial-part1/
							https://rayanfam.com/topics/pykd-tutorial-part2/
							https://github.com/WinDbgScripts/PYKD
							https://www.thezdi.com/blog/2018/7/19/mindshare-an-introduction-to-pykd
							https://github.com/JayFoxRox/pykdclient
							https://github.com/bruce30262/TWindbg
							https://githomelab.ru/pykd/pykd
							https://githomelab.ru/pykd/pykd-ext/-/wikis/Downloads
						}
					}
				}
			}
			windows mitigation exploitation: {
				http://publications.alex-ionescu.com/TLV/TLV%202019%20-%20KASLR%20&%20The%20Evolution%20of%20Windows%20Security.pdf
				https://docs.microsoft.com/en-us/windows/security/threat-protection/
				https://github.com/nccgroup/exploit_mitigations/blob/master/windows_mitigations.md
				https://github.com/nccgroup/exploit_mitigations/blob/master/edge_mitigations.md
				https://github.com/nccgroup/exploit_mitigations/blob/master/office_mitigations.md
				https://github.com/m8urnett/Windows-Spectre-Meltdown-Mitigations
				https://github.com/alphaSeclab/windows-security
				https://github.com/beerisgood/Windows10_Hardening
				https://github.com/simeononsecurity/Windows-Optimize-Harden-Debloat
				https://github.com/hfiref0x/MpEnum
				https://github.com/disable-windows-defender/disable-windows-defender.github.io
				https://github.com/simeononsecurity/Windows-Defender-Hardening
				https://github.com/simeononsecurity/Windows-Defender-Application-Control-Hardening
			}
			heap and memory internals: {
				https://www.i.u-tokyo.ac.jp/edu/training/ss/lecture/new-documents/Lectures/02-VirtualMemory/VirtualMemory.pdf
				https://i.blackhat.com/USA21/Wednesday-Handouts/us-21-Windows-Heap-Backed-Pool-The-Good-The-Bad-And-The-Encoded.pdf
				https://www.osr.com/nt-insider/2019-issue1/lfh-kernel-pool-allocator-challenges-the-incumbent/
				https://mista.nu/research/kernelpool_infiltrate2011.pdf
				https://www.exploit-db.com/docs/english/33196-windows-heap-overflow-exploitation.pdf
				https://github.com/datntsec/WINDOWS-10-SEGMENT-HEAP-INTERNALS
				https://0x43434343.github.io/win10_internal/
				https://empyreal96.github.io/nt-info-depot/Windows-Kernel-Internals/UserModeHeapManager.pdf
				https://bsodtutorials.blogspot.com/2014/01/debugging-heaps-and-heap-internals-part.html
				https://bsodtutorials.blogspot.com/2014/01/debugging-heaps-and-heap-internals-part_6.html
				https://archive.org/details/youtube-hetZx78SQ_A
				https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-heap
				https://www.slideshare.net/AngelBoy1/windows-10-nt-heap-exploitation-english-version?from_action=save
			}
		
			NT file system: {
				https://www.pdfdrive.com/windows-nt-file-system-internals-e41608639.html
			}
			ReactOS it is clone NT 5.2,for study and learn principles,it is good: {
				https://reactos.org/architecture/
				http://publications.alex-ionescu.com/Google/Google%202013%20-%20Reactos%20-%20The%20Crazy%20Open%20Source%20Attempt%20to%20Reimplement%20Windows%20from%20Scratch.pdf
				https://github.com/reactos/reactos
				ReactOS only kernel files: {
					https://github.com/feel-the-dz3n/ReactOS-Kernel
				}
				ReactOS Memory Managment: {
					https://github.com/reactos/reactos/tree/master/ntoskrnl/mm
					https://doxygen.reactos.org/dir_42c667bb69710d53c75010907de83af0.html
					https://doxygen.reactos.org/d3/df6/boot_2freeldr_2freeldr_2lib_2mm_2heap_8c.html
				}
				ReactOS processes and threads: {
					https://github.com/reactos/reactos/tree/master/ntoskrnl/ps
				}
				ReactOS security context : {
					https://github.com/reactos/reactos/tree/master/ntoskrnl/se
				}
				ReactOS NTDLL: {
					https://doxygen.reactos.org/dir_a7ad942ac829d916497d820c4a26c555.html
				}
			}
		}
	}
}
